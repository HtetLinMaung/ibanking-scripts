import { AxiosRequestConfig, AxiosResponse } from "axios";
export interface ClientOptions {
    retry?: number;
    retryDelay?: number;
    retryWhen?: (response: AxiosResponse<any, any>, error: any) => boolean;
    interval?: number;
    requestUntil?: (response: AxiosResponse<any, any>, error: any) => boolean;
}
declare const _default: {
    get: (url: string, config?: AxiosRequestConfig<any>, options?: ClientOptions) => Promise<any[]>;
    post: (url: string, data?: any, config?: AxiosRequestConfig<any>, options?: ClientOptions) => Promise<any[]>;
    put: (url: string, data?: any, config?: AxiosRequestConfig<any>, options?: ClientOptions) => Promise<any[]>;
    patch: (url: string, data?: any, config?: AxiosRequestConfig<any>, options?: ClientOptions) => Promise<any[]>;
    delete: (url: string, config?: AxiosRequestConfig<any>, options?: ClientOptions) => Promise<any[]>;
};
export default _default;
